{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      console.log(state.items, state); //   const existingItem = state.items.find((item) => item.id === newItem.id);\n\n      state.totalQuantity++;\n      state.changed = true;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/Users/amber/Desktop/UdemyReact/advanced-redux/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","console","log","existingItem","push","id","price","quantity","totalPrice","title","removeItemFromCart","find","item","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE,CAFH;AAGZC,IAAAA,OAAO,EAAE;AAHG,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACJ,aAAN,GAAsBK,MAAM,CAACC,OAAP,CAAeN,aAArC;AACAI,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAAP,CAAeP,KAA7B;AACD,KAJO;;AAKRQ,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACL,KAAlB,EAAyBK,KAAzB,EAF2B,CAG3B;;AACAA,MAAAA,KAAK,CAACJ,aAAN;AACAI,MAAAA,KAAK,CAACH,OAAN,GAAgB,IAAhB;;AACA,UAAI,CAACU,YAAL,EAAmB;AACjBP,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADG;AAEfC,UAAAA,KAAK,EAAEN,OAAO,CAACM,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAER,OAAO,CAACM,KAJL;AAKfjB,UAAAA,IAAI,EAAEW,OAAO,CAACS;AALC,SAAjB;AAOD,OARD,MAQO;AACLN,QAAAA,YAAY,CAACI,QAAb;AACAJ,QAAAA,YAAY,CAACK,UAAb,GAA0BL,YAAY,CAACK,UAAb,GAA0BR,OAAO,CAACM,KAA5D;AACD;AACF,KAvBO;;AAwBRI,IAAAA,kBAAkB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMQ,EAAE,GAAGR,MAAM,CAACC,OAAlB;AACA,YAAMK,YAAY,GAAGP,KAAK,CAACL,KAAN,CAAYoB,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAvC,CAArB;AACAT,MAAAA,KAAK,CAACJ,aAAN;AACAI,MAAAA,KAAK,CAACH,OAAN,GAAgB,IAAhB;;AACA,UAAIU,YAAY,CAACI,QAAb,KAA0B,CAA9B,EAAiC;AAC/BX,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYsB,MAAZ,CAAoBD,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAzC,CAAd;AACD,OAFD,MAEO;AACLF,QAAAA,YAAY,CAACI,QAAb;AACAJ,QAAAA,YAAY,CAACK,UAAb,GAA0BL,YAAY,CAACK,UAAb,GAA0BL,YAAY,CAACG,KAAjE;AACD;AACF;;AAnCO;AAPkB,CAAD,CAA7B;AA8CA,OAAO,MAAMQ,WAAW,GAAG1B,SAAS,CAAC2B,OAA9B;AACP,eAAe3B,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false,\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      console.log(state.items, state);\n      //   const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"]},"metadata":{},"sourceType":"module"}